<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pain01-Words</title>
  
  <subtitle>Hi this is just for fun</subtitle>
  <link href="http://geeksman.ir/rss.xml" rel="self"/>
  
  <link href="http://geeksman.ir/"/>
  <updated>2025-09-16T18:17:22.965Z</updated>
  <id>http://geeksman.ir/</id>
  
  <author>
    <name>Pain01</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rust_lang_0_[ENTRY point, print something, etc]]</title>
    <link href="http://geeksman.ir/2025/09/16/Rust-lang-0-ENTRY-point-print-something-etc/"/>
    <id>http://geeksman.ir/2025/09/16/Rust-lang-0-ENTRY-point-print-something-etc/</id>
    <published>2025-09-16T05:46:00.000Z</published>
    <updated>2025-09-16T18:17:22.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RUST"><a href="#RUST" class="headerlink" title="RUST"></a>RUST</h1><p>خوب من یک چیزایی در مورد زبان راست یاد<br>رفتم خیلی ابتدایی هست ولی دوست داشتم که خودم یک بار درسش رو بدم</p><h2 id="1-Entry-point"><a href="#1-Entry-point" class="headerlink" title="1.Entry point"></a>1.Entry point</h2><p>خوب ما یک اینتری پوینت داریم که برنامه ما از اونجا کد های ما رو کمپایل میکنه که تابع </p><p>main </p><p>هستش</p><p>بدین صورت</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>()&#123;<br><span class="hljs-comment">// comment somthing</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2-print-somthing-low-level"><a href="#2-print-somthing-low-level" class="headerlink" title="2.print somthing(low level)"></a>2.print somthing(low level)</h2><p>دقیقا مثل زبان سی یا زبان های دیگه</p><p>اگر بخواید چیزی رو چاپ کنید باید از تابع </p><p><code>println!();</code></p><p>استفاده کنید</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>()&#123;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;Hello, World&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-Set-Variable"><a href="#3-Set-Variable" class="headerlink" title="3.Set Variable"></a>3.Set Variable</h2><p>خوب برای ست کردن متغییر روش های متعددی هست و همچنین انواع داده های زیادی هست سعی میکنم با مثال اینا رو بگم</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>()&#123;<br><span class="hljs-comment">// int</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable">a</span>:<span class="hljs-type">i32</span> = -<span class="hljs-number">545</span>; <span class="hljs-comment">// this is 32bit number and + OR -</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">b</span>:<span class="hljs-type">u16</span> = <span class="hljs-number">5465</span>; <span class="hljs-comment">// this is 16bit number in another word is + number</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">c</span> = <span class="hljs-number">46</span>; <span class="hljs-comment">// by default is i32</span><br>    <br>    <span class="hljs-comment">// float</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">d</span>:<span class="hljs-type">f32</span> = <span class="hljs-number">55.232</span>; <span class="hljs-comment">// 32bit float number</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">e</span>:<span class="hljs-type">f64</span> = <span class="hljs-number">45456.151531</span>; <span class="hljs-comment">// 64bit float number</span><br>    <br>    <span class="hljs-comment">//char</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">f</span>:<span class="hljs-type">char</span> = <span class="hljs-string">&#x27;a&#x27;</span>;<br>    <br>    <span class="hljs-comment">//string</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">g</span>:&amp;<span class="hljs-type">str</span> = <span class="hljs-string">&quot;Hi Everybody!&quot;</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">h</span>:<span class="hljs-type">String</span> = <span class="hljs-string">&quot;Hi Everybody!&quot;</span>.<span class="hljs-title function_ invoke__">to_owned</span>();<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">i</span>:<span class="hljs-type">String</span> = <span class="hljs-type">String</span>::<span class="hljs-title function_ invoke__">from</span>(<span class="hljs-string">&quot;Hi Everybody!&quot;</span>);<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-Suffix"><a href="#4-Suffix" class="headerlink" title="4.Suffix"></a>4.Suffix</h2><p>خوب اینم از انواع متغییر حالا این متغییر ها رو اینطوری هم میشه تعریف کرد که اسمش<br>suffix هست </p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">a</span> = <span class="hljs-number">5656_u32</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>یک </p><p><code>_&lt;data_type&gt;</code></p><p>در پایان اون متغییر اضافه میکنیم </p><h2 id="5-Type-Aliases"><a href="#5-Type-Aliases" class="headerlink" title="5.Type Aliases"></a>5.Type Aliases</h2><p>خوب یک چیز آپشنال هم هست ما میتونیم نام مستعار بدیم به دیتا تایپ ها مثل این :</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">type</span> <span class="hljs-title class_">age</span> =<span class="hljs-type">u32</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">a</span>:age = <span class="hljs-number">546</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>این خیلی جالبه</p><h2 id="6-Mutability"><a href="#6-Mutability" class="headerlink" title="6.Mutability"></a>6.Mutability</h2><p>خب یک موضوعی هست داخل زبان راست در مورد </p><p><code>mutability</code></p><p>که من وقتی متغییری رو تعریف میکنم حق تغییر دادنش رو ندارم چون به اصطلاح</p><p><code>immutable</code></p><p>و من باید </p><p><code>mutable</code>اش </p><p>بکنم</p><p>اینجوری</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-comment">// Wrong way:</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">a</span>:<span class="hljs-type">i32</span>= <span class="hljs-number">546</span>;<br>    a = <span class="hljs-number">78</span>; <span class="hljs-comment">// it&#x27;s give me error</span><br>    <br>    <span class="hljs-comment">//mutability    </span><br>    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut </span><span class="hljs-variable">b</span>:<span class="hljs-type">i32</span> = <span class="hljs-number">5456465</span>;<br>    b=<span class="hljs-number">6516</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="7-Scope"><a href="#7-Scope" class="headerlink" title="7.Scope"></a>7.Scope</h2><p>و مبحث بعدی در مورد </p><p><code>scope</code></p><p>هستش در زبان راست ما میتونیم کلی اسکوپ متعدد درست کنیم و متغییر هایی رو اونجا تعریف کنیم که در جا های دیگه کاربرد ندارن ولی میتونیم از متغییر های گلوبال استفاده کنیم </p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">type</span> <span class="hljs-title class_">age</span> =<span class="hljs-type">u32</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">a</span>:age = <span class="hljs-number">546</span>;<br>    <br>    &#123;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">b</span>:<span class="hljs-type">i16</span> = -<span class="hljs-number">55</span>;<br>    &#125;<br>    <span class="hljs-comment">//Scope</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="8-Constant"><a href="#8-Constant" class="headerlink" title="8.Constant"></a>8.Constant</h2><p>خوب مبحث جالب بعدی </p><p><code>constant</code></p><p>ها هستن که ما متغییر هایی رو تعریف میکنیم که قابلیت تعویض ندارن و این خیلی باحاله و میتونیم از شون هر جایی استفاده کنیم</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">const</span> PI:<span class="hljs-type">f32</span> = <span class="hljs-number">3.14</span>;<br><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">const</span> K:<span class="hljs-type">u32</span> = <span class="hljs-number">9</span>;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="9-Shadowing"><a href="#9-Shadowing" class="headerlink" title="9.Shadowing"></a>9.Shadowing</h2><p>خوب موضوع بعدی</p><p><code>shadowing</code></p><p>هستش که وقتی یک متغییر رو دوبار تعریف میکنیم متغییر جدید سایه میندازه روی متغییر قدیمی و باعث میشه دیگه به قبلی دسترسی نداشته باشیم از نظر شخصی من بده چون ممکنه یک جا دو بار متغییر ست کنیم و لاجیک برنامه به هم بخوره </p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">k</span>:<span class="hljs-type">u32</span> = <span class="hljs-number">9</span>;<br>    <span class="hljs-keyword">let</span> <span class="hljs-variable">k</span>:<span class="hljs-type">u32</span> = <span class="hljs-number">4546</span>;<br>    <span class="hljs-comment">// The result of k is 4546</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="10-Print-somthing-medium-level"><a href="#10-Print-somthing-medium-level" class="headerlink" title="10.Print somthing (medium level)"></a>10.Print somthing (medium level)</h2><p>خوب موضوع پایانی هم چاپ متغییر ها هستش که اونم به دو صورت انجام میشه</p><figure class="highlight rust"><table><tr><td class="code"><pre><code class="hljs rust"><span class="hljs-keyword">fn</span> <span class="hljs-title function_">main</span>() &#123;<br><span class="hljs-keyword">let</span> <span class="hljs-variable">a</span> = <span class="hljs-number">15</span>;<br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;&#125;&quot;</span>,a); <span class="hljs-comment">// read it : print line macro rule</span><br><span class="hljs-built_in">println!</span>(<span class="hljs-string">&quot;&#123;a&#125;&quot;</span>); <span class="hljs-comment">// another way</span><br>    <br>    <span class="hljs-built_in">print!</span>(<span class="hljs-string">&quot;&#123;a&#125;&quot;</span>); <span class="hljs-comment">// print with no \n</span><br>&#125;<br></code></pre></td></tr></table></figure><p>خوب در قسمت بعدی در مورد چگونگی گرفتن ورودی و اسپلیت کردنش یا تغییر دیتاتایپ ها صحبت میکنیم</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RUST&quot;&gt;&lt;a href=&quot;#RUST&quot; class=&quot;headerlink&quot; title=&quot;RUST&quot;&gt;&lt;/a&gt;RUST&lt;/h1&gt;&lt;p&gt;خوب من یک چیزایی در مورد زبان راست یاد&lt;br&gt;رفتم خیلی ابتدایی هس</summary>
      
    
    
    
    <category term="RUST" scheme="http://geeksman.ir/categories/RUST/"/>
    
    
    <category term="Rust" scheme="http://geeksman.ir/tags/Rust/"/>
    
    <category term="programming" scheme="http://geeksman.ir/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>First_notes</title>
    <link href="http://geeksman.ir/2025/09/15/First-notes/"/>
    <id>http://geeksman.ir/2025/09/15/First-notes/</id>
    <published>2025-09-15T18:50:00.000Z</published>
    <updated>2025-09-16T05:44:29.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h1><p>خوب من اینجا درباره نکاتی در مورد هک و امنیت وب اپلیکیشن ها و شبکه و اینا میپردازم و هدف از ساخت چنین پوستی اینه که بگم اینجا هکر نوتز هستش </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Notes&quot;&gt;&lt;a href=&quot;#Notes&quot; class=&quot;headerlink&quot; title=&quot;Notes&quot;&gt;&lt;/a&gt;Notes&lt;/h1&gt;&lt;p&gt;خوب من اینجا درباره نکاتی در مورد هک و امنیت وب اپلیکیشن ه</summary>
      
    
    
    
    <category term="Notes" scheme="http://geeksman.ir/categories/Notes/"/>
    
    
    <category term="farsi" scheme="http://geeksman.ir/tags/farsi/"/>
    
    <category term="hack" scheme="http://geeksman.ir/tags/hack/"/>
    
  </entry>
  
  <entry>
    <title>اولین پوست</title>
    <link href="http://geeksman.ir/2025/09/15/hello-world/"/>
    <id>http://geeksman.ir/2025/09/15/hello-world/</id>
    <published>2025-09-15T15:21:00.000Z</published>
    <updated>2025-09-15T18:48:52.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="اولین-پوست"><a href="#اولین-پوست" class="headerlink" title="اولین پوست"></a>اولین پوست</h1><p>من در اینجا چیزایی که یاد میگیرم رو بازگو میکنم که خودم بهتر یاد بگیرم اگر این باعث میشه که تو هم چیزایی جدیدی یاد بگیری که چه بهتر من درمورد برنامه نویسی و امنیت و شبکه و حتی موضوعات ریاضی و فیزیک مینویسم و امیدوارم همه اون چیزایی که بلدم رو درست منتقل کنم </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;اولین-پوست&quot;&gt;&lt;a href=&quot;#اولین-پوست&quot; class=&quot;headerlink&quot; title=&quot;اولین پوست&quot;&gt;&lt;/a&gt;اولین پوست&lt;/h1&gt;&lt;p&gt;من در اینجا چیزایی که یاد میگیرم رو با</summary>
      
    
    
    
    <category term="FUN" scheme="http://geeksman.ir/categories/FUN/"/>
    
    
    <category term="farsi" scheme="http://geeksman.ir/tags/farsi/"/>
    
    <category term="first" scheme="http://geeksman.ir/tags/first/"/>
    
    <category term="persian" scheme="http://geeksman.ir/tags/persian/"/>
    
  </entry>
  
</feed>
