[{"title":"Rust_lang_0_[ENTRY point, print something, etc]]","url":"/2025/09/16/Rust-lang-0-ENTRY-point-print-something-etc/","content":"# RUST\n\nخوب من یک چیزایی در مورد زبان راست یاد \nرفتم خیلی ابتدایی هست ولی دوست داشتم که خودم یک بار درسش رو بدم\n\n## 1.Entry point\nخوب ما یک اینتری پوینت داریم که برنامه ما از اونجا کد های ما رو کمپایل میکنه که تابع \n\nmain \n\nهستش\n\nبدین صورت\n\n``` rust\nfn main(){\n\t// comment somthing\n}\n```\n## 2.print somthing(low level)\nدقیقا مثل زبان سی یا زبان های دیگه\n\nاگر بخواید چیزی رو چاپ کنید باید از تابع \n\n`println!();`\n\nاستفاده کنید\n\n``` rust\nfn main(){\n\tprintln!(\"Hello, World\");\n}\n```\n\n## 3.Set Variable\nخوب برای ست کردن متغییر روش های متعددی هست و همچنین انواع داده های زیادی هست سعی میکنم با مثال اینا رو بگم\n\n``` rust\nfn main(){\n\t// int\n\tlet a:i32 = -545; // this is 32bit number and + OR -\n    let b:u16 = 5465; // this is 16bit number in another word is + number\n    let c = 46; // by default is i32\n    \n    // float\n    let d:f32 = 55.232; // 32bit float number\n    let e:f64 = 45456.151531; // 64bit float number\n    \n    //char\n    let f:char = 'a';\n    \n    //string\n    let g:&str = \"Hi Everybody!\";\n    let h:String = \"Hi Everybody!\".to_owned();\n    let i:String = String::from(\"Hi Everybody!\");\n    \n}\n```\n## 4.Suffix\nخوب اینم از انواع متغییر حالا این متغییر ها رو اینطوری هم میشه تعریف کرد که اسمش\nsuffix هست \n\n``` rust\nfn main() {\n\tlet a = 5656_u32;\n}\n```\nیک \n\n`_<data_type>`\n\nدر پایان اون متغییر اضافه میکنیم \n\n## 5.Type Aliases \nخوب یک چیز آپشنال هم هست ما میتونیم نام مستعار بدیم به دیتا تایپ ها مثل این :\n``` rust\nfn main() {\n\ttype age =u32;\n    let a:age = 546;\n}\n```\nاین خیلی جالبه\n\n## 6.Mutability\nخب یک موضوعی هست داخل زبان راست در مورد \n\n`mutability`\n\nکه من وقتی متغییری رو تعریف میکنم حق تغییر دادنش رو ندارم چون به اصطلاح\n\n`immutable`\n\nو من باید \n\n`mutable`اش \n\nبکنم\n\nاینجوری\n\n``` rust\nfn main() {\n\t// Wrong way:\n    let a:i32= 546;\n    a = 78; // it's give me error\n    \n    //mutability    \n    let mut b:i32 = 5456465;\n    b=6516;\n}\n```\n## 7.Scope\nو مبحث بعدی در مورد \n\n`scope`\n\nهستش در زبان راست ما میتونیم کلی اسکوپ متعدد درست کنیم و متغییر هایی رو اونجا تعریف کنیم که در جا های دیگه کاربرد ندارن ولی میتونیم از متغییر های گلوبال استفاده کنیم \n\n``` rust \nfn main() {\n\ttype age =u32;\n    let a:age = 546;\n    \n    {\n    \tlet b:i16 = -55;\n    }\n    //Scope\n}\n```\n## 8.Constant\nخوب مبحث جالب بعدی \n\n`constant`\n\nها هستن که ما متغییر هایی رو تعریف میکنیم که قابلیت تعویض ندارن و این خیلی باحاله و میتونیم از شون هر جایی استفاده کنیم\n\n``` rust \nconst PI:f32 = 3.14;\nfn main() {\n\tconst K:u32 = 9;\n    \n}\n```\n## 9.Shadowing\nخوب موضوع بعدی\n\n`shadowing`\n\nهستش که وقتی یک متغییر رو دوبار تعریف میکنیم متغییر جدید سایه میندازه روی متغییر قدیمی و باعث میشه دیگه به قبلی دسترسی نداشته باشیم از نظر شخصی من بده چون ممکنه یک جا دو بار متغییر ست کنیم و لاجیک برنامه به هم بخوره \n\n``` rust \nfn main() {\n\tlet k:u32 = 9;\n    let k:u32 = 4546;\n    // The result of k is 4546\n}\n```\n## 10.Print somthing (medium level)\nخوب موضوع پایانی هم چاپ متغییر ها هستش که اونم به دو صورت انجام میشه\n\n``` rust \nfn main() {\n\tlet a = 15;\n\tprintln!(\"{}\",a); // read it : print line macro rule\n\tprintln!(\"{a}\"); // another way\n    \n    print!(\"{a}\"); // print with no \\n\n}\n```\n\n\nخوب در قسمت بعدی در مورد چگونگی گرفتن ورودی و اسپلیت کردنش یا تغییر دیتاتایپ ها صحبت میکنیم","tags":["Rust","programming"],"categories":["RUST"]},{"title":"First_notes","url":"/2025/09/15/First-notes/","content":"# Notes\nخوب من اینجا درباره نکاتی در مورد هک و امنیت وب اپلیکیشن ها و شبکه و اینا میپردازم و هدف از ساخت چنین پوستی اینه که بگم اینجا هکر نوتز هستش ","tags":["farsi","hack"],"categories":["Notes"]},{"title":"اولین پوست","url":"/2025/09/15/hello-world/","content":"# اولین پوست\n\nمن در اینجا چیزایی که یاد میگیرم رو بازگو میکنم که خودم بهتر یاد بگیرم اگر این باعث میشه که تو هم چیزایی جدیدی یاد بگیری که چه بهتر من درمورد برنامه نویسی و امنیت و شبکه و حتی موضوعات ریاضی و فیزیک مینویسم و امیدوارم همه اون چیزایی که بلدم رو درست منتقل کنم \n\n","tags":["farsi","first","persian"],"categories":["FUN"]}]